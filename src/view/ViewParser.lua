---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by benjamin.
--- DateTime: 6/04/22 22:14
---

local ViewParser = {}


--- Start delimiter for a block.
local START_MULTILINE_DELIMITER = "@{"
--- End delimiter for a block.
local END_MULTILINE_DELIMITER = "}"
--TODO : Start delimiter for a single line.


--- Parer of template to HTML string
--- @param content string Template content to parse
--- @param data table Data to fill the template
function ViewParser:parse(content, data)
    content = content or ''

    local currentCode, currentIndex = extractContent(content, 1)
    while currentCode ~= nil and currentIndex ~= nil do
        print("Next code: ", currentIndex)
        print("Find code: ", currentCode)
        loadCode(currentCode, data)
        currentCode, currentIndex = extractContent(content, currentIndex)
    end



    return content
end



-- Find first index of START_DELIMITER and next index of END_DELIMITER after START_DELIMITER and extract the content between them.
---@param content string
---@return {string, number} Extracted content and end index of END_DELIMITER
function extractContent(content, currentIndex)
    local startIndex = content:find(START_MULTILINE_DELIMITER, currentIndex)
    local endIndex = content:find(END_MULTILINE_DELIMITER, startIndex)

    if startIndex ~= nil and endIndex ~= nil then
        return content:sub(startIndex + #START_MULTILINE_DELIMITER, endIndex - 1), endIndex
    else
        return nil, nil
    end
end


--- Load code extracted from template
--- @param code string Code to load
--- @param data table Data to fill the template
--- @return string Result of executed code
function loadCode(code, globalData)
    data = globalData
    return load(code)()
end

return ViewParser